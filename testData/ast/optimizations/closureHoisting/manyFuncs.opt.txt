Block isRoot = 1, isBody = 0
|-VarDecl 'local' 'z'
|   Initializer
|     LiteralExpr LK_INT 0
|-VarDecl 'let' '$ch0'
|   Initializer
|     DeclExpr
|       FunctionDecl name = 'fff'
|       |-Parameters count = 2
|       | |-Parameter #1 name = 'a'
|       | `-Parameter #2 name = 'b'
|       `-Body
|           Block isRoot = 0, isBody = 1
|           |-VarDecl 'let' 'c'
|           |   Initializer
|           |     DeclExpr
|           |       ClassDecl
|           |       |-Key: <anonymous>
|           |       `-Members
|           |         |-LiteralExpr LK_INT 10
|           |         `-DeclExpr
|           |             FunctionDecl name = 'zed'
|           |             |-Parameters count = 0
|           |             `-Body
|           |                 Block isRoot = 0, isBody = 1
|           |                   ReturnStatement
|           |                     BinExpr '+'
|           |                     |-Left
|           |                     |   LiteralExpr LK_INT 10
|           |                     `-Right
|           |                         GetFieldExpr '.' fieldName = 'x'
|           |                           Receiver
|           |                             Id 'this'
|           `-ReturnStatement
|               CallExpr
|                 Callee
|                   GetFieldExpr '.' fieldName = 'zed'
|                     Receiver
|                       CallExpr
|                         Callee
|                           Id 'c'
|-VarDecl 'let' '$ch1'
|   Initializer
|     DeclExpr
|       FunctionDecl name = '(manyFuncs.nut:12)'
|       |-Parameters count = 0
|       `-Body
|           Block isRoot = 0, isBody = 1
|             ReturnStatement
|               LiteralExpr LK_INT 10
|-VarDecl 'let' '$ch2'
|   Initializer
|     DeclExpr
|       FunctionDecl 'lambda' name = '(manyFuncs.nut:12)'
|       |-Parameters count = 1
|       |   Parameter #1 name = 'r'
|       `-Body
|           Block isRoot = 0, isBody = 1
|             ReturnStatement
|               BinExpr '*'
|               |-Left
|               |   Id 'r'
|               `-Right
|                   LiteralExpr LK_INT 2
`-VarDecl 'let' 'foo'
    Initializer
      DeclExpr
        FunctionDecl name = 'foo'
        |-Parameters count = 2
        | |-Parameter #1 name = 'x'
        | `-Parameter #2 name = 'y'
        `-Body
            Block isRoot = 0, isBody = 1
            |-VarDecl 'let' 'ar'
            |   Initializer
            |     ArrayExpr
            |     |-Element #1
            |     |   Id '$ch0'
            |     |-Element #2
            |     |   Id '$ch1'
            |     `-Element #3
            |         Id '$ch2'
            `-ExprStatement
                CallExpr
                |-Callee
                |   GetSlotExpr '['
                |   |-Receiver
                |   |   Id 'ar'
                |   `-Key
                |       LiteralExpr LK_INT 0
                `-Arguments
                  |-Argument #1
                  |   LiteralExpr LK_INT 3
                  `-Argument #2
                      LiteralExpr LK_INT 4
